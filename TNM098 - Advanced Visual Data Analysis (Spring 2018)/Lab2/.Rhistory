ggplot(db_data, aes(x = x, y = y) +geom_point(aes(color = 'cluster'))
ggplot(db_data, aes(x = x, y = y) +geom_point(aes(color = 'cluster'))
ggplot(db_data, aes(x = db_data$x, y = db_data$y) +geom_point(aes(color = 'cluster'))
ggplot(db_data, aes(x = db_data$x, y = db_data$y) +geom_point(aes(color = 'cluster')))
ggplot(db_data, aes(x = db_data$x, y = db_data$y) +geom_point(aes(color = db_data$cluster)))
ggplot(db_data, aes(db_data$x, db_data$y) +geom_point(aes(color = db_data$cluster)))
ggplot(db_data, aes(db_data$x, db_data$y) +geom_point(aes(db_data$cluster)))
plot(db_data, col=db_data$cluster, pch = 20)
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 20, MinPts = 15)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 20, minPts = 15)
db_data <- cbind(db_data, cluster = db2$cluster)
pairs(db_data, col = db_data$cluster + 1L)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="red")
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="red",high="blue")
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 20, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 20, minPts = 5)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db2 <-dbscan(db_data, eps = 10, minPts = 15)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db2 <-dbscan(db_data, eps = 10, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
? dbscan
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 20, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db2 <-dbscan(db_data, eps = 15, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db2 <-dbscan(db_data, eps = 10, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db2 <-dbscan(db_data, eps = 5, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db2 <-dbscan(db_data, eps = 15, minPts = 15)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 15)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db2 <-dbscan(db_data, eps = 10, minPts = 15)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db2 <-dbscan(db_data, eps = 10, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 10, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="yellow",high="blue")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 10, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="blue")
db2 <-dbscan(db_data, eps = 15, minPts = 20)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="blue")
db2 <-dbscan(db_data, eps = 15, minPts = 5)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="blue")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="blue")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data <- dplyr::filter(db_data, cluster > 0)
View(db_data)
rm(list=ls())
library(ggplot2)
library(googleVis)
library(rgl)
data = read.csv2("Lab2_data.csv")
data$ID <- 1
M1 <- gvisMotionChart(data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
plot(M1)
plot(M1)
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[(db_data$cluster==0),]
View(db_data)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
View(db_data)
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 10, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
max(db_data$y)-db_data$y
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
data$ID <- 1
M1 <- gvisMotionChart(data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
plot(M1)
library(googleVis)
data$ID <- 1
M1 <- gvisMotionChart(data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
plot(M1)
data = read.csv2("Lab2_data.csv")
plot(data$GazePointX.px., max(data$GazePointY.px.)-data$GazePointY.px., pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
ggplot(data,aes(data$GazePointX.px.,max(data$GazePointY.px.)-data$GazePointY.px.,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
data$ID <- 1
M1 <- gvisMotionChart(data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
plot(M1)
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
max(data$GazePointY.px.)-
max(data$GazePointY.px.)-
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,max(db_data$y)-db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
plot(data$GazePointX.px., max(data$GazePointY.px.)-data$GazePointY.px., pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
rm(list=ls())
library(ggplot2)
library(googleVis)
library(rgl)
data = read.csv2("Lab2_data.csv")
View(data)
View(data)
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
x_cord = data$GazePointX.px.
y_cord = max(data$GazePointY.px.)-data$GazePointY.px.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
? ggplot
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
View(data)
data$ID <- 1
M1 <- gvisMotionChart(data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
plot(M1)
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
rm(list=ls())
library(ggplot2)
library(googleVis)
#Plot Gaze points dependence of time.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
rm(list=ls())
library(ggplot2)
library(googleVis)
data = read.csv2("Lab2_data.csv") # Read data.
x_cord = data$GazePointX.px. #X points
y_cord = max(data$GazePointY.px.)-data$GazePointY.px. #Y point, max(y)-y because we want to flip limit of axis.
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
#Plot Gaze points dependence of time.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
#Plot Gaze points dependence of time.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
#googleVis motionchart to plot movement of gaze points over time.
data$ID <- 1
M1 <- gvisMotionChart(data, idvar="ID", timevar="RecordingTimestamp",xvar=x_cord, yvar=y_cord)
plot(M1)
M1 <- gvisMotionChart(data, idvar="ID", timevar="RecordingTimestamp",xvar=x_cord, yvar=y_cord)
#googleVis motionchart to plot movement of gaze points over time.
gvis_data <- data
gvis_data$ID <- 1
gvis_data$GazePointY.px. <- y_cord
View(gvis_data)
View(data)
#googleVis motionchart to plot movement of gaze points over time.
gvis_data <- data
gvis_data$ID <- 1
gvis_data$GazePointY.px. <- y_cord
M1 <- gvisMotionChart(gvis_data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
plot(M1)
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.))
db2 <-dbscan(db_data, eps = 15, minPts = 8)
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
View(data)
rm(list=ls())
rm(list=ls())
rm(list=ls())
rm(list=ls())
library(ggplot2)
library(googleVis)
data = read.csv2("Lab2_data.csv") # Read data.
x_cord = data$GazePointX.px. #X points
y_cord = max(data$GazePointY.px.)-data$GazePointY.px. #Y point, max(y)-y because we want to flip limit of axis.
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800])
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800])
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "blue")
? plot
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
xmax = max(x_cord)
ymax = max(y_cord)
? plot
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "blue",xlim=c(0,xmax), ylim = c(0,ymax))
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
xmax = max(x_cord)
ymax = max(y_cord)
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "blue",xlim=c(0,xmax), ylim = c(0,ymax))
#Plot Gaze points dependence of time. More red means more frequent.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
#googleVis motionchart to plot movement of gaze points over time.
gvis_data <- data #New variable of original data.
gvis_data$ID <- 1
gvis_data$GazePointY.px. <- y_cord
M1 <- gvisMotionChart(gvis_data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
plot(M1) #Works only for Firefox.
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "blue",xlim=c(0,xmax), ylim = c(0,ymax))
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "firebrick",xlim=c(0,xmax), ylim = c(0,ymax))
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "firebrick",xlim=c(0,xmax), ylim = c(0,ymax), main= "Gaze Points in with over 800ms in duration")
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "firebrick",xlim=c(0,xmax), ylim = c(0,ymax), main= "Gaze Points in with over 800ms")
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)")
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)", xlab="x", ylab="y")
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "firebrick",xlim=c(0,xmax), ylim = c(0,ymax), main= "Gaze Points in with over 800ms", xlab="x", ylab="y")
#Plot Gaze points dependence of time. More red means more frequent.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp), xlab = "x")+geom_point()+
scale_color_gradient(low="yellow",high="red")
? ggplot
#DBScan over the data.
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 8) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
rm(list=ls())
library(ggplot2)
library(googleVis)
data = read.csv2("Lab2_data.csv") # Read data.
x_cord = data$GazePointX.px. #X points
y_cord = max(data$GazePointY.px.)-data$GazePointY.px. #Y point, max(y)-y because we want to flip limit of axis.
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)", xlab="x", ylab="y")
xmax = max(x_cord)
ymax = max(y_cord)
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "firebrick",xlim=c(0,xmax), ylim = c(0,ymax), main= "Gaze Points in with over 800ms", xlab="x", ylab="y")
#Plot Gaze points dependence of time. More red means more frequent.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
#googleVis motionchart to plot movement of gaze points over time.
gvis_data <- data #New variable of original data.
gvis_data$ID <- 1
gvis_data$GazePointY.px. <- y_cord
M1 <- gvisMotionChart(gvis_data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
#DBScan over the data.
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 8) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "firebrick",xlim=c(0,xmax), ylim = c(0,ymax), main= "Gaze Points in with over 800ms", xlab="x", ylab="y")
rm(list=ls())
library(ggplot2)
library(googleVis)
data = read.csv2("Lab2_data.csv") # Read data.
x_cord = data$GazePointX.px. #X points
y_cord = max(data$GazePointY.px.)-data$GazePointY.px. #Y point, max(y)-y because we want to flip limit of axis.
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)", xlab="x", ylab="y")
xmax = max(x_cord)
ymax = max(y_cord)
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "firebrick",xlim=c(0,xmax), ylim = c(0,ymax), main= "Gaze Points in with over 800ms", xlab="x", ylab="y")
#Plot Gaze points dependence of time. More red means more frequent.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
#googleVis motionchart to plot movement of gaze points over time.
gvis_data <- data #New variable of original data.
gvis_data$ID <- 1
gvis_data$GazePointY.px. <- y_cord
M1 <- gvisMotionChart(gvis_data, idvar="ID", timevar="RecordingTimestamp",xvar="GazePointX.px.", yvar="GazePointY.px.")
plot(M1) #Works only for Firefox.
data = read.csv2("Lab2_data.csv") # Read data.
x_cord = data$GazePointX.px. #X points
y_cord = max(data$GazePointY.px.)-data$GazePointY.px. #Y point, max(y)-y because we want to flip limit of axis.
# Plot all gaze points.
plot(x_cord,y_cord, pch = 21, bg = "violet", main = "Gaze points in (X,Y)", xlab="x", ylab="y")
xmax = max(x_cord)
ymax = max(y_cord)
# Plot points where GazeEventDuration exceeds 800ms.
plot(x_cord[data$GazeEventDuration.mS.>800],y_cord[data$GazeEventDuration.mS.>800], pch = 21, bg = "firebrick",xlim=c(0,xmax), ylim = c(0,ymax), main= "Gaze Points in with over 800ms", xlab="x", ylab="y")
#Plot Gaze points dependence of time. More red means more frequent.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
#DBScan over the data.
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 8) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 10, minPts = 8) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
#DBScan over the data.
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 8) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 5) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 10) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 8) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db2 <-dbscan(db_data, eps = 15, minPts = 6) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db2 <-dbscan(db_data, eps = 15, minPts = 5) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 5) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
#DBScan over the data.
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 6) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
#Plot Gaze points dependence of time. More red means more frequent.
ggplot(data,aes(x_cord,y_cord,color=data$RecordingTimestamp))+geom_point()+
scale_color_gradient(low="yellow",high="red")
#DBScan over the data.
library(dbscan)
db_data = as.data.frame(cbind(x = data$GazePointX.px., y =max(data$GazePointY.px.)-data$GazePointY.px.)) #New variable of original data.
db2 <-dbscan(db_data, eps = 15, minPts = 6) #eps = 15 and minPts = 8. Play around!
#Data preprocessing
db_data <- cbind(db_data, cluster = db2$cluster)
db_data<-db_data[!(db_data$cluster==0),]
#Plot cluster
ggplot(db_data, aes(db_data$x,db_data$y, color=db_data$cluster))+geom_point()+
scale_color_gradient(low="green",high="red")
library(kernlab)
? ksvm
